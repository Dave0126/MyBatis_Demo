<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        MyBatis核心配置文件中，标签的顺序如下：
        properties?,settings?,typeAliases?,typeHandlers?,
        objectFactory?,objectWrapperFactory?,reflectorFactory?,
        plugins?,environments?,databaseIdProvider?,mappers?
    -->

    <!-- 加载properties文件 -->
    <properties resource="jdbc.properties"/>

    <typeAliases>
        <!--
            typeAlias: 设置某个类的别名（因为每次使用全类名很麻烦）
            属性:
                type: 全类名
                alias: 缺省时为类名（不区分大小写）
        -->
<!--        <typeAlias type="需要设置别名的类的全类名，如<fr.gdai.mybatis.pojo.User>" alias="别名"/>-->
        <!-- 以包为单位，设置以类名作为别名，且不区分大小写 -->
        <package name=""/>
    </typeAliases>

    <!--
    environments: 可配置多个连接数据库的环境
    属性:
        default: 设置默认使用的环境的id
-->
    <environments default="development">
        <!--
            environment: 配置某个具体的环境
            属性:
                id: 表示连接数据库环境的唯一标识
        -->
        <environment id="development">
            <!--
                transactionManager: 设置事务管理的方式
                属性:
                    type="JDBC/MANAGE"
                    JDBC: 表示在当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，
                            事务的提交或回滚需要手动配置
                    MANAGE: 被管理，例如被Spring管理
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource: 配置数据源
                属性:
                    type="POOLED/UNPOOLED/JNDI"
                    POOLED: 表示使用连接池缓存数据连接
                    UNPOOLED: 表示不使用连接池
                    JNDI: 表示使用上下文中的数据库
            -->
            <dataSource type="POOLED">
                <!-- 设置连接数据库的信息 -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.name}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 引入映射文件 -->
    <mappers>
        <!-- 引入单个文件: mappers/UserMapper.xml 文件 -->
        <mapper resource=""/>
        <!-- 或 -->
        <!--
            以包为单位引入映射文件
            要求
             1. mapper接口所在的包要和映射文件所在的包一致，即UserMapper.java与UserMapper.xml包路径相同
             2. mapper接口要与映射文件的名字一致
        -->
        <package name=""/>
    </mappers>
</configuration>